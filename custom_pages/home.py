import streamlit as st
import pandas as pd
import tensorflow as tf

st.title("‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà Website ML & Neural Netwoorksü§ñ")
st.write(
    "‡πÉ‡∏ô‡πÄ‡∏ß‡πá‡∏õ‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Machine Learing ‡πÑ‡∏î‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå ‡∏≠‡∏µ‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏¢‡∏±‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏ô Neural Netwoorks ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á Tensorflow ‡∏î‡πâ‡∏ß‡∏¢ ‡πÉ‡∏ä‡πâ‡πÅ‡∏ñ‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ üöÄ"
)
st.markdown("---")

col1, col2 = st.columns(2)
CarSales = pd.read_csv("Car_sales.csv")

@st.cache_data
def load_datasets():
    mnist = tf.keras.datasets.mnist.load_data()
    fashion_mnist = tf.keras.datasets.fashion_mnist.load_data()
    cifar10 = tf.keras.datasets.cifar10.load_data()
    return mnist, fashion_mnist, cifar10

(mnist_train, mnist_test), (fashion_train, fashion_test), (cifar_train, cifar_test) = load_datasets()

with col1:
    st.header("Dataset 1 : Car Detail")
    st.write("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå")
    st.dataframe(CarSales)
with col2:
    st.header("Dataset 2 : MNIST , Fashion MNIST , CIFAR-10")
    st.write("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á Tensorflow")

    cols = st.columns(4)
    for i in range(4):
        with cols[i]:
            st.image(mnist_train[0][i], width=100)
            st.image(fashion_train[0][i], width=100)
            st.image(cifar_train[0][i], width=100)


st.markdown("---")
st.header("‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Project ‡∏ô‡∏µ‡πâ")
col1, col2 = st.columns(2)
with col1:
    st.subheader("KNN : K-Nearest Neighbor")
    st.image("custom_pages/KNN.png", caption="[‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å](https://medium.com/@sachinsoni600517/k-nearest-neighbours-introduction-to-machine-learning-algorithms-9dbc9d9fb3b2)",width=700)
    st.subheader("D3 : Decision Tree")
    st.image("custom_pages/D3.png", caption="[‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å](https://k21academy.com/datascience-blog/decision-tree-algorithm/)",width=700)
with col2:
    st.subheader("SVM : Support Vector Machine")
    st.image("custom_pages/SVM.png", caption="[‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å](https://vitalflux.com/classification-model-svm-classifier-python-example/)",width=700)
    st.subheader("Ensemble")
    st.image("custom_pages/ensemble.png", caption="[‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å](https://intuitivetutorial.com/2023/05/12/ensemble-models-in-machine-learning/)",width=700)
    
    st.subheader("Neural Networks (CNN)")
    st.image("custom_pages/neuralnetworks.png", caption="[‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å](https://en.m.wikipedia.org/wiki/File:Typical_cnn.png)",width=700)


st.write("Created by Phongphat Bangkha - [GITHUB](https://github.com/RA9T0R)")

